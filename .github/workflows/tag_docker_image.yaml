name: Tag Docker Image

on:
  push:
    branches:
      - "master"
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Build & Push Docker Image with Version Tags
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'
      - name: Figure file hash
        id: figure_file_hash
        run: |
          NODE_NDC_CODE_HASH=$(./scripts/figure_all_packages_hash.sh)
          echo "${NODE_NDC_CODE_HASH}"
          echo "code_hash=${NODE_NDC_CODE_HASH}" >> $GITHUB_OUTPUT

          REPO_VERSION=$(cat package.json | jq -r '.version')
          echo "repo_version=${REPO_VERSION}"
          echo "repo_version=${REPO_VERSION}" >> $GITHUB_OUTPUT

          IMAGE_TAG=plankroot/docker-console:hash-$NODE_NDC_CODE_HASH
          echo "image_tag=${IMAGE_TAG}"
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

          IMAGE_VERSION_TAG=plankroot/docker-console:$REPO_VERSION
          echo "image_version_tag=${IMAGE_VERSION_TAG}"
          echo "image_version_tag=${IMAGE_VERSION_TAG}" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Check if image exists
        id: image_exists
        shell: bash
        run: |
          if docker manifest inspect ${{ steps.figure_file_hash.outputs.image_version_tag }}; then
              echo "ndc=true" >> $GITHUB_OUTPUT
          else
              echo "ndc=false" >> $GITHUB_OUTPUT
          fi
      - name: Install Packages
        if: ${{ steps.image_exists.outputs.ndc == 'false' }}
        run: yarn install --frozen-lockfile
      - name: Build
        if: ${{ steps.image_exists.outputs.ndc == 'false' }}
        run: yarn build
      - name: Set up QEMU
        if: ${{ steps.image_exists.outputs.ndc == 'false' }}
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: ${{ steps.image_exists.outputs.ndc == 'false' }}
        uses: docker/setup-buildx-action@v3
      - name: Build & Push Server
        if: ${{ steps.image_exists.outputs.ndc == 'false' }}
        id: build_server_docker
        uses: docker/build-push-action@v6
        with:
          context: ./deploy
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.figure_file_hash.outputs.image_version_tag }},plankroot/docker-console:latest

      - name: Tag Commit If Not Exists
        run: |
          set -e;

          git config --global user.email "sieglive@gmail.com";
          git config --global user.name "Jiahang Cao";

          git fetch origin;

          if git rev-parse v${{ steps.figure_file_hash.outputs.repo_version }} >/dev/null 2>&1; then
              echo "Tag v${{ steps.figure_file_hash.outputs.repo_version }} already exists";
          else
              git tag -a v${{ steps.figure_file_hash.outputs.repo_version }} HEAD -m "Version ${{ steps.figure_file_hash.outputs.repo_version }}"
              git push origin v${{ steps.figure_file_hash.outputs.repo_version }};
          fi
